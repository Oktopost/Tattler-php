!function(){"use strict";function n(n,e){var t=n;for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o]);return t}function e(){function n(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return n()+n()+"-"+n()+"-"+n()+"-"+n()+"-"+n()+n()+n()}function t(n,e,t,o,r,s){var a=function(n,e){var t,o=[];for(t in n)if(n.hasOwnProperty(t)){var r=e?e+"["+t+"]":t,s=n[t];o.push(null!==s&&"object"==typeof s?a(s,r):encodeURIComponent(r)+"="+encodeURIComponent(s))}return o.join("&")},c=new XMLHttpRequest;if(c.onreadystatechange=function(){c.readyState==XMLHttpRequest.DONE&&(c.status>=200&&c.status<300?("function"==typeof o&&o(JSON.parse(c.responseText)),"function"==typeof s&&s(!0)):("function"==typeof r&&r(c.response),"function"==typeof s&&s(!1)))},n=n.toUpperCase(),"GET"===n){var i="?";e.match(/\?/)&&(i="&"),e+=i+a(t),t=""}else t=JSON.stringify(t);return c.open(n,e,!0),c.send(t)}function o(n){for(var e in n)if(n.hasOwnProperty(e))return!1;return JSON.stringify(n)===JSON.stringify({})}function r(n){var e=n.match(/^(wss?\:)\/\/(([^:\/?#]*)(?:\:([0-9]+))?)([\/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/);return e&&{protocol:e[1],hostname:e[3],port:e[4]}}var s={urls:{ws:"/_tattler/ws",channels:"/_tattler/channels"},requests:{ws:"get",channels:"get"},autoConnect:!0,debug:!1},a={},c={getInstance:function(n){return a[n]},create:function(n){var t=new i(n);return a[e()]=t,t}},i=function(e){var a=[],c=n(s,e),i={getWs:{onSuccess:function(n){var e=r(n.ws);u.server=e.protocol+"//"+e.hostname,u.port=e.port,w()},onError:function(){g("error","Failed to get ws address")}},getChannels:{onSuccess:function(n){for(var e in n.channels)n.channels.hasOwnProperty(e)&&d(n.channels[e],!0);i.socket.handleEvents()},onError:function(){g("error","Failed to get channels listing")}},socket:{connected:function(){g("warn","connected to socket"),m()},disconnected:function(){g("error","disconnected from socket");for(var n in u.channels)u.channels.hasOwnProperty(n)&&(u.channels[n]=!1)},handleEvents:function(){"undefined"==typeof u.socket._callbacks.$defaultEvent&&u.socket.on("defaultEvent",function(n){for(var e=n.id||Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,30),t=n.handler,o=n.namespace||"global",r=0;10>r&&a.hasOwnProperty(r);r++)if(a[r]===e)return void g("info","preventing duplicate message processing",n);a.unshift(e),a.length=10,l(o,t)===!1?g("error","handler "+t+" with namespace "+o+" not defined",n):"undefined"==typeof n.payload?u.handlers[o][t](n):u.handlers[o][t](n.payload)})}}},u={socket:null,server:null,port:null,channels:{},handlers:{global:{"console.log":function(n){return"undefined"!=typeof n.force?void console.warn(n):void(c.debug===!0?(g("warn","-------------------------------------------------------------"),g("warn","remote: "+n.message),g("warn","-------------------------------------------------------------")):g("warn","remote",n.message))},alert:function(n){var e;"undefined"!=typeof n.title&&(e=n.title),""!==e&&(e="--------------------------"+e.toUpperCase()+"--------------------------",e+="\n"),e+=n.message,alert(e)},confirm:function(n){confirm(n.message)?void 0!==n.yes&&"function"==typeof[n.yes]&&n.yes():void 0!==n.no&&"function"==typeof n.no&&window[n.no]()},addChannel:function(n,e){d(n.channel,e)},removeChannel:function(n){h(n.channel)}}}},f=[],l=function(n,e){return"undefined"!=typeof u.handlers[n]&&"undefined"!=typeof u.handlers[n][e]},d=function(n,e){"undefined"==typeof u.channels[n]||u.channels[n]!==e?(u.channels[n]=e,null!==u.socket?(g("info","joining channel «"+n+"»"),u.socket.emit("subscribe",n)):g("info","adding channel «"+n+"»")):g("error","channel «"+n+"» already defined")},h=function(n){"undefined"==typeof u.channels[n]?g("error","failed to unsubscribe from «"+n+"» - channel not defined"):(delete u.channels[n],u.socket.emit("unsubscribe",n),g("warn","unsubscribed from «"+n+"»"))},p=function(n,e,t){"function"==typeof e&&(t=e,e="global"),l(e,n)===!1?("undefined"==typeof u.handlers[e]&&(u.handlers[e]={}),u.handlers[e][n]=t,g("info","added handler for event «"+n+"» in namespace «"+e+"»")):g("error","preventing handler creation for event «"+n+"» in «"+e+"»: already exists. Check your code.")},g=function(){for(var n=[],e={},t=0;t<arguments.length;t++)n.push(arguments[t]);var o=n.shift();if(e.type=o,e.date=new Date,e.data=n,f.push(e),c.debug===!0){n.unshift("Tattler:");for(var r in n)if("object"==typeof n[r])return void console[o](n);console[o](n.join(" "))}},v=function(){for(var n in f)console[f[n].type](f[n].date,f[n].data)},y=function(){g("info","requesting WS url"),t(c.requests.ws,c.urls.ws,{},i.getWs.onSuccess,i.getWs.onError)},w=function(){if(null===u.socket){if(null===u.server)return void g("error","Failed to connect to socket: address unknown");u.socket=io(u.server+":"+u.port),u.socket.on("connect",i.socket.connected),u.socket.on("disconnect",i.socket.disconnected),g("info","connecting to socket at "+u.server+":"+u.port)}else g("error","socket already connected")},m=function(){var n=u.socket.io.engine.id,e=[];if(o(u.channels))g("log","requesting channels with socketId="+n);else{g("log","connecting to saved channels");for(var r in u.channels)u.channels.hasOwnProperty(r)&&e.push(r)}t(c.requests.channels,c.urls.channels,{socketId:n,channels:e},i.getChannels.onSuccess,i.getChannels.onError)};c.autoConnect&&y(),g("info","creating socket's stuff..."),this.debug=v,this.addHandler=p,this.addChannel=d,this.run=y};window.tattlerFactory=c}();