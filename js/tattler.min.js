!function(){"use strict";function c(a,b){var c=a;for(var d in b)b.hasOwnProperty(d)&&(c[d]=b[d]);return c}function d(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}function e(a,b,c,d,e,f){var g=function(a,b){var d,c=[];for(d in a)if(a.hasOwnProperty(d)){var e=b?b+"["+d+"]":d,f=a[d];c.push(null!==f&&"object"==typeof f?g(f,e):encodeURIComponent(e)+"="+encodeURIComponent(f))}return c.join("&")},h=new XMLHttpRequest;if(h.onreadystatechange=function(){h.readyState===XMLHttpRequest.DONE&&(h.status>=200&&h.status<300?("function"==typeof d&&d(JSON.parse(h.responseText)),"function"==typeof f&&f(!0)):("function"==typeof e&&e(h.response),"function"==typeof f&&f(!1)))},a=a.toUpperCase(),"GET"===a){var i="?";b.match(/\?/)&&(i="&"),b+=i+g(c),c=""}else c=JSON.stringify(c);return h.open(a,b,!0),h.send(c)}function f(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return JSON.stringify(a)===JSON.stringify({})}function g(a){var b=a.match(/^(wss?\:)\/\/(([^:\/?#]*)(?:\:([0-9]+))?)([\/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/);return b&&{protocol:b[1],hostname:b[3],port:b[4]}}var a={urls:{ws:"/_tattler/ws",channels:"/_tattler/channels",auth:"/_tattler/auth"},requests:{ws:"get",channels:"get",auth:"get"},autoConnect:!0,debug:!1},b={},h={getInstance:function(a){return b[a]},create:function(a){var c=new i(a);return b[d()]=c,c}},i=function(b){var d=[],h=c(a,b),i={getWs:{onSuccess:function(a){var b=g(a.ws);j.server=b.protocol+"//"+b.hostname,j.port=b.port,t()},onError:function(){p("error","Failed to get ws address")}},getChannels:{onSuccess:function(a){for(var b in a.channels)a.channels.hasOwnProperty(b)&&m(a.channels[b],!0);i.socket.handleEvents()},onError:function(){p("error","Failed to get channels listing")}},socket:{connected:function(){p("warn","connected to socket"),u()},disconnected:function(){p("error","disconnected from socket");for(var a in j.channels)j.channels.hasOwnProperty(a)&&(j.channels[a]=!1)},handleEvents:function(){"undefined"==typeof j.socket._callbacks.$defaultEvent&&j.socket.on("defaultEvent",function(a){for(var b=a.id||Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,30),c=a.handler,e=a.namespace||"global",f=0;f<10&&d.hasOwnProperty(f);f++)if(d[f]===b)return void p("info","preventing duplicate message processing",a);d.unshift(b),d.length=10,l(e,c)===!1?p("error","handler "+c+" with namespace "+e+" not defined",a):"undefined"==typeof a.payload?j.handlers[e][c](a):j.handlers[e][c](a.payload)})}}},j={socket:null,server:null,port:null,channels:{},handlers:{global:{"console.log":function(a){return"undefined"!=typeof a.force?void console.warn(a):void(h.debug===!0?(p("warn","-------------------------------------------------------------"),p("warn","remote: "+a.message),p("warn","-------------------------------------------------------------")):p("warn","remote",a.message))},alert:function(a){var b;"undefined"!=typeof a.title&&(b=a.title),""!==b&&(b="--------------------------"+b.toUpperCase()+"--------------------------",b+="\n"),b+=a.message,alert(b)},confirm:function(a){confirm(a.message)?void 0!==a.yes&&"function"==typeof[a.yes]&&a.yes():void 0!==a.no&&"function"==typeof a.no&&window[a.no]()},addChannel:function(a,b){m(a.channel,b)},removeChannel:function(a){n(a.channel)}}}},k=[],l=function(a,b){return"undefined"!=typeof j.handlers[a]&&"undefined"!=typeof j.handlers[a][b]},m=function(a,b){"undefined"==typeof j.channels[a]||j.channels[a]!==b?(j.channels[a]=b,null!==j.socket?(p("info","joining channel «"+a+"»"),j.socket.emit("subscribe",a)):p("info","adding channel «"+a+"»")):p("error","channel «"+a+"» already defined")},n=function(a){"undefined"==typeof j.channels[a]?p("error","failed to unsubscribe from «"+a+"» - channel not defined"):(delete j.channels[a],j.socket.emit("unsubscribe",a),p("warn","unsubscribed from «"+a+"»"))},o=function(a,b,c){"function"==typeof b&&(c=b,b="global"),l(b,a)===!1?("undefined"==typeof j.handlers[b]&&(j.handlers[b]={}),j.handlers[b][a]=c,p("info","added handler for event «"+a+"» in namespace «"+b+"»")):p("error","preventing handler creation for event «"+a+"» in «"+b+"»: already exists. Check your code.")},p=function(){for(var a=[],b={},c=0;c<arguments.length;c++)a.push(arguments[c]);var d=a.shift();if(b.type=d,b.date=new Date,b.data=a,k.push(b),h.debug===!0){a.unshift("Tattler:");for(var e in a)if("object"==typeof a[e])return void console[d](a);console[d](a.join(" "))}},q=function(){for(var a in k)console[k[a].type](k[a].date,k[a].data)},r=function(){p("info","requesting WS url"),e(h.requests.ws,h.urls.ws,{},i.getWs.onSuccess,i.getWs.onError)},s=function(a,b){e(h.requests.auth,h.urls.auth,{},function(b){a(b.token)},b)},t=function(){if(null===j.socket){if(null===j.server)return void p("error","Failed to connect to socket: address unknown");s(function(a){j.socket=io(j.server+":"+j.port,{query:"token="+a}),j.socket.on("connect",i.socket.connected),j.socket.on("disconnect",i.socket.disconnected),p("info","connecting to socket at "+j.server+":"+j.port)})}else p("error","socket already connected")},u=function(){var a=j.socket.io.engine.id,b=[];if(f(j.channels))p("log","requesting channels with socketId="+a);else{p("log","connecting to saved channels");for(var c in j.channels)j.channels.hasOwnProperty(c)&&b.push(c)}e(h.requests.channels,h.urls.channels,{socketId:a,channels:b},i.getChannels.onSuccess,i.getChannels.onError)};h.autoConnect&&r(),p("info","creating socket's stuff..."),this.debug=q,this.addHandler=o,this.addChannel=m,this.run=r};window.tattlerFactory=h}();